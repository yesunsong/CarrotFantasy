# =========================================================================
#     This makefile was generated by
#     Bakefile 0.2.9 (http://www.bakefile.org)
#     Do not modify, all changes will be overwritten!
# =========================================================================



# -------------------------------------------------------------------------
# These are configurable options:
# -------------------------------------------------------------------------

# C++ compiler 
CXX = g++

# Standard flags for C++ 
CXXFLAGS ?= 

# Standard preprocessor flags (common for CC and CXX) 
CPPFLAGS ?= 

# Standard linker flags 
LDFLAGS ?= 

# Set to 1 to build debug version [0,1]
DEBUG ?= 0

# Set to 1 to link dynamic version [0,1]
SHARE ?= 0

# Set to 1 to build with C++0x support [0,1]
CPP0X ?= 0



# -------------------------------------------------------------------------
# Do not modify the rest of this file!
# -------------------------------------------------------------------------

### Variables: ###

CPPDEPS = -MT$@ -MF$@.d -MD -MP
TESTSUITE_CXXFLAGS = $(____DEBUG_4_p) $(____DEBUG_5_p) $(____DEBUG_6_7) \
	$(____DEBUG_8) $(____DEBUG_11_12) -Iinclude -I..\include -mthreads \
	$(____SHARE_20_p) $(__CPP0X_21) $(CPPFLAGS) $(CXXFLAGS)
TESTSUITE_OBJECTS =  \
	mingw$(DEBUG_0)$(SHARE_1)\TestSuite_main.o \
	mingw$(DEBUG_0)$(SHARE_1)\TestSuite_ProxyTest.o \
	mingw$(DEBUG_0)$(SHARE_1)\TestSuite_DelegateCommandTest.o \
	mingw$(DEBUG_0)$(SHARE_1)\TestSuite_SimpleCommandTest.o \
	mingw$(DEBUG_0)$(SHARE_1)\TestSuite_MacroCommandTest.o \
	mingw$(DEBUG_0)$(SHARE_1)\TestSuite_MediatorTest.o \
	mingw$(DEBUG_0)$(SHARE_1)\TestSuite_NotificationTest.o \
	mingw$(DEBUG_0)$(SHARE_1)\TestSuite_ObserverTest.o \
	mingw$(DEBUG_0)$(SHARE_1)\TestSuite_ModelTest.o \
	mingw$(DEBUG_0)$(SHARE_1)\TestSuite_FacadeTest.o \
	mingw$(DEBUG_0)$(SHARE_1)\TestSuite_ViewTest.o \
	mingw$(DEBUG_0)$(SHARE_1)\TestSuite_ControllerTest.o \
	mingw$(DEBUG_0)$(SHARE_1)\TestSuite_IteratorTest.o \
	mingw$(DEBUG_0)$(SHARE_1)\TestSuite_PureMVCThreadTest.o

### Conditionally set variables: ###

ifeq ($(DEBUG),0)
____DEBUG_4_p = -DNDEBUG
endif
ifeq ($(DEBUG),1)
____DEBUG_4_p = -D_DEBUG
endif
ifeq ($(DEBUG),0)
____DEBUG_5_p = -DNDEBUG
endif
ifeq ($(DEBUG),1)
____DEBUG_5_p = -DDEBUG
endif
ifeq ($(DEBUG),0)
____DEBUG_6_7 = -O2
endif
ifeq ($(DEBUG),1)
____DEBUG_6_7 = -O0
endif
ifeq ($(DEBUG),0)
____DEBUG_11_12 = 
endif
ifeq ($(DEBUG),1)
____DEBUG_11_12 = -W -Wall
endif
ifeq ($(SHARE),0)
____SHARE_20_p = -D_NO_DLL
endif
ifeq ($(SHARE),1)
____SHARE_20_p = -D_DLL
endif
ifeq ($(CPP0X),0)
__CPP0X_21 = 
endif
ifeq ($(CPP0X),1)
__CPP0X_21 = -std=c++0x
endif
ifeq ($(SHARE),0)
__SHARE_22 = -static-libgcc -static-libstdc++
endif
ifeq ($(SHARE),1)
__SHARE_22 = 
endif
ifeq ($(DEBUG),0)
____DEBUG_8 = 
endif
ifeq ($(DEBUG),1)
____DEBUG_8 = -g
endif
ifeq ($(DEBUG),0)
DEBUG_0 = \release
endif
ifeq ($(DEBUG),1)
DEBUG_0 = \debug
endif
ifeq ($(SHARE),0)
SHARE_1 = \static
endif
ifeq ($(SHARE),1)
SHARE_1 = \share
endif
ifeq ($(SHARE),0)
SHARE_3 = 
endif
ifeq ($(SHARE),1)
SHARE_3 = dll
endif
ifeq ($(SHARE),0)
____SHARE_26_FILENAMES = lib
endif
ifeq ($(SHARE),1)
____SHARE_26_FILENAMES = bin
endif
ifeq ($(SHARE),0)
____SHARE_24_FILENAMES = lib
endif
ifeq ($(SHARE),1)
____SHARE_24_FILENAMES = 
endif
ifeq ($(DEBUG),0)
DEBUG_2 = 
endif
ifeq ($(DEBUG),1)
DEBUG_2 = d
endif
ifeq ($(SHARE),0)
____SHARE_25_FILENAMES = .a
endif
ifeq ($(SHARE),1)
____SHARE_25_FILENAMES = .dll
endif


all: mingw$(__DEBUG_0)$(__SHARE_1)
mingw$(__DEBUG_0)$(__SHARE_1):
	-if not exist mingw$(__DEBUG_0)$(__SHARE_1) mkdir mingw$(__DEBUG_0)$(__SHARE_1)

### Targets: ###

all: first_check mingw$(DEBUG_0)$(SHARE_1)\TestSuite$(DEBUG_2)$(SHARE_3).exe ..\bin\mingw\TestSuite$(DEBUG_2)$(SHARE_3).exe mingw$(DEBUG_0)$(SHARE_1)\$(____SHARE_24_FILENAMES)PureMVC$(DEBUG_2)$(____SHARE_25_FILENAMES)

clean: 
	-if exist mingw$(DEBUG_0)$(SHARE_1)\*.o del mingw$(DEBUG_0)$(SHARE_1)\*.o
	-if exist mingw$(DEBUG_0)$(SHARE_1)\*.d del mingw$(DEBUG_0)$(SHARE_1)\*.d
	-if exist mingw$(DEBUG_0)$(SHARE_1)\TestSuite$(DEBUG_2)$(SHARE_3).exe del mingw$(DEBUG_0)$(SHARE_1)\TestSuite$(DEBUG_2)$(SHARE_3).exe

first_check: 
	if $(DEBUG) == 1 if not exist mingw$(DEBUG_0)$(SHARE_1) mkdir mingw$(DEBUG_0)$(SHARE_1)
	if $(DEBUG) == 0 if not exist mingw$(DEBUG_0)$(SHARE_1) mkdir mingw$(DEBUG_0)$(SHARE_1)

mingw$(DEBUG_0)$(SHARE_1)\TestSuite$(DEBUG_2)$(SHARE_3).exe: $(TESTSUITE_OBJECTS)
	$(CXX) -o $@ $(TESTSUITE_OBJECTS)  $(____DEBUG_8)  -mthreads $(__SHARE_22) -L..\lib\mingw $(LDFLAGS)  -lPureMVC$(DEBUG_2)$(SHARE_3)

..\bin\mingw\TestSuite$(DEBUG_2)$(SHARE_3).exe: mingw$(DEBUG_0)$(SHARE_1)\TestSuite$(DEBUG_2)$(SHARE_3).exe
	copy mingw$(DEBUG_0)$(SHARE_1)\TestSuite$(DEBUG_2)$(SHARE_3).exe ..\bin\mingw\TestSuite$(DEBUG_2)$(SHARE_3).exe

mingw$(DEBUG_0)$(SHARE_1)\$(____SHARE_24_FILENAMES)PureMVC$(DEBUG_2)$(____SHARE_25_FILENAMES): ..\$(____SHARE_26_FILENAMES)\mingw\$(____SHARE_24_FILENAMES)PureMVC$(DEBUG_2)$(____SHARE_25_FILENAMES)
	copy ..\$(____SHARE_26_FILENAMES)\mingw\$(____SHARE_24_FILENAMES)PureMVC$(DEBUG_2)$(____SHARE_25_FILENAMES) mingw$(DEBUG_0)$(SHARE_1)\$(____SHARE_24_FILENAMES)PureMVC$(DEBUG_2)$(____SHARE_25_FILENAMES)

mingw$(DEBUG_0)$(SHARE_1)\TestSuite_main.o: ./src/main.cpp
	$(CXX) -c -o $@ $(TESTSUITE_CXXFLAGS) $(CPPDEPS) $<

mingw$(DEBUG_0)$(SHARE_1)\TestSuite_ProxyTest.o: ./src/ProxyTest.cpp
	$(CXX) -c -o $@ $(TESTSUITE_CXXFLAGS) $(CPPDEPS) $<

mingw$(DEBUG_0)$(SHARE_1)\TestSuite_DelegateCommandTest.o: ./src/DelegateCommandTest.cpp
	$(CXX) -c -o $@ $(TESTSUITE_CXXFLAGS) $(CPPDEPS) $<

mingw$(DEBUG_0)$(SHARE_1)\TestSuite_SimpleCommandTest.o: ./src/SimpleCommandTest.cpp
	$(CXX) -c -o $@ $(TESTSUITE_CXXFLAGS) $(CPPDEPS) $<

mingw$(DEBUG_0)$(SHARE_1)\TestSuite_MacroCommandTest.o: ./src/MacroCommandTest.cpp
	$(CXX) -c -o $@ $(TESTSUITE_CXXFLAGS) $(CPPDEPS) $<

mingw$(DEBUG_0)$(SHARE_1)\TestSuite_MediatorTest.o: ./src/MediatorTest.cpp
	$(CXX) -c -o $@ $(TESTSUITE_CXXFLAGS) $(CPPDEPS) $<

mingw$(DEBUG_0)$(SHARE_1)\TestSuite_NotificationTest.o: ./src/NotificationTest.cpp
	$(CXX) -c -o $@ $(TESTSUITE_CXXFLAGS) $(CPPDEPS) $<

mingw$(DEBUG_0)$(SHARE_1)\TestSuite_ObserverTest.o: ./src/ObserverTest.cpp
	$(CXX) -c -o $@ $(TESTSUITE_CXXFLAGS) $(CPPDEPS) $<

mingw$(DEBUG_0)$(SHARE_1)\TestSuite_ModelTest.o: ./src/ModelTest.cpp
	$(CXX) -c -o $@ $(TESTSUITE_CXXFLAGS) $(CPPDEPS) $<

mingw$(DEBUG_0)$(SHARE_1)\TestSuite_FacadeTest.o: ./src/FacadeTest.cpp
	$(CXX) -c -o $@ $(TESTSUITE_CXXFLAGS) $(CPPDEPS) $<

mingw$(DEBUG_0)$(SHARE_1)\TestSuite_ViewTest.o: ./src/ViewTest.cpp
	$(CXX) -c -o $@ $(TESTSUITE_CXXFLAGS) $(CPPDEPS) $<

mingw$(DEBUG_0)$(SHARE_1)\TestSuite_ControllerTest.o: ./src/ControllerTest.cpp
	$(CXX) -c -o $@ $(TESTSUITE_CXXFLAGS) $(CPPDEPS) $<

mingw$(DEBUG_0)$(SHARE_1)\TestSuite_IteratorTest.o: ./src/IteratorTest.cpp
	$(CXX) -c -o $@ $(TESTSUITE_CXXFLAGS) $(CPPDEPS) $<

mingw$(DEBUG_0)$(SHARE_1)\TestSuite_PureMVCThreadTest.o: ./src/PureMVCThreadTest.cpp
	$(CXX) -c -o $@ $(TESTSUITE_CXXFLAGS) $(CPPDEPS) $<

.PHONY: all clean


SHELL := $(COMSPEC)

# Dependencies tracking:
-include mingw$(__DEBUG_0)$(__SHARE_1)/*.d
