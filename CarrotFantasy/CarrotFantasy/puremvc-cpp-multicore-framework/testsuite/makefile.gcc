# =========================================================================
#     This makefile was generated by
#     Bakefile 0.2.9 (http://www.bakefile.org)
#     Do not modify, all changes will be overwritten!
# =========================================================================



# -------------------------------------------------------------------------
# These are configurable options:
# -------------------------------------------------------------------------

# C++ compiler 
CXX = g++

# Standard flags for C++ 
CXXFLAGS ?= 

# Standard preprocessor flags (common for CC and CXX) 
CPPFLAGS ?= 

# Standard linker flags 
LDFLAGS ?= 

# Set to 1 to build debug version [0,1]
DEBUG ?= 0

# Set to 1 to link dynamic version [0,1]
SHARE ?= 0

# Set to 1 to build with C++0x support [0,1]
CPP0X ?= 0



# -------------------------------------------------------------------------
# Do not modify the rest of this file!
# -------------------------------------------------------------------------

### Variables: ###

CPPDEPS = -MT$@ -MF`echo $@ | sed -e 's,\.o$$,.d,'` -MD -MP
TESTSUITE_CXXFLAGS = $(____DEBUG_4_p) $(____DEBUG_5_p) $(____DEBUG_6_7) \
	$(____DEBUG_8) $(____DEBUG_11_12) -Iinclude -I../include -D_THREAD_SAFE \
	-pthread $(__CPP0X_20) $(CPPFLAGS) $(CXXFLAGS)
TESTSUITE_OBJECTS =  \
	gcc$(__DEBUG_0)$(__SHARE_1)/TestSuite_main.o \
	gcc$(__DEBUG_0)$(__SHARE_1)/TestSuite_ProxyTest.o \
	gcc$(__DEBUG_0)$(__SHARE_1)/TestSuite_DelegateCommandTest.o \
	gcc$(__DEBUG_0)$(__SHARE_1)/TestSuite_SimpleCommandTest.o \
	gcc$(__DEBUG_0)$(__SHARE_1)/TestSuite_MacroCommandTest.o \
	gcc$(__DEBUG_0)$(__SHARE_1)/TestSuite_MediatorTest.o \
	gcc$(__DEBUG_0)$(__SHARE_1)/TestSuite_NotificationTest.o \
	gcc$(__DEBUG_0)$(__SHARE_1)/TestSuite_ObserverTest.o \
	gcc$(__DEBUG_0)$(__SHARE_1)/TestSuite_ModelTest.o \
	gcc$(__DEBUG_0)$(__SHARE_1)/TestSuite_FacadeTest.o \
	gcc$(__DEBUG_0)$(__SHARE_1)/TestSuite_ViewTest.o \
	gcc$(__DEBUG_0)$(__SHARE_1)/TestSuite_ControllerTest.o \
	gcc$(__DEBUG_0)$(__SHARE_1)/TestSuite_IteratorTest.o \
	gcc$(__DEBUG_0)$(__SHARE_1)/TestSuite_PureMVCThreadTest.o

### Conditionally set variables: ###

ifeq ($(DEBUG),0)
__DEBUG_0 = /release
endif
ifeq ($(DEBUG),1)
__DEBUG_0 = /debug
endif
ifeq ($(SHARE),0)
__SHARE_1 = /static
endif
ifeq ($(SHARE),1)
__SHARE_1 = /share
endif
ifeq ($(SHARE),0)
__SHARE_3 = 
endif
ifeq ($(SHARE),1)
__SHARE_3 = dll
endif
ifeq ($(DEBUG),0)
____DEBUG_4_p = -DNDEBUG
endif
ifeq ($(DEBUG),1)
____DEBUG_4_p = -D_DEBUG
endif
ifeq ($(DEBUG),0)
____DEBUG_5_p = -DNDEBUG
endif
ifeq ($(DEBUG),1)
____DEBUG_5_p = -DDEBUG
endif
ifeq ($(DEBUG),0)
____DEBUG_6_7 = -O2
endif
ifeq ($(DEBUG),1)
____DEBUG_6_7 = -O0
endif
ifeq ($(DEBUG),0)
____DEBUG_11_12 = 
endif
ifeq ($(DEBUG),1)
____DEBUG_11_12 = -W -Wall
endif
ifeq ($(CPP0X),0)
__CPP0X_20 = 
endif
ifeq ($(CPP0X),1)
__CPP0X_20 = -std=c++0x
endif
ifeq ($(SHARE),0)
__SHARE_24 = .a
endif
ifeq ($(SHARE),1)
__SHARE_24 = .so
endif
ifeq ($(DEBUG),0)
____DEBUG_8 = 
endif
ifeq ($(DEBUG),1)
____DEBUG_8 = -g
endif
ifeq ($(SHARE),0)
__SHARE_2 = lib
endif
ifeq ($(SHARE),1)
__SHARE_2 = bin
endif
ifeq ($(DEBUG),0)
__DEBUG_2 = 
endif
ifeq ($(DEBUG),1)
__DEBUG_2 = d
endif


all: gcc$(__DEBUG_0)$(__SHARE_1)
gcc$(__DEBUG_0)$(__SHARE_1):
	@mkdir -p gcc$(__DEBUG_0)$(__SHARE_1)

### Targets: ###

all: first_check gcc$(__DEBUG_0)$(__SHARE_1)/TestSuite$(__DEBUG_2)$(__SHARE_3) ../bin/gcc/TestSuite$(__DEBUG_2)$(__SHARE_3) gcc$(__DEBUG_0)$(__SHARE_1)/libPureMVC$(__DEBUG_2)$(__SHARE_24)

install: 

uninstall: 

clean: 
	rm -f gcc$(__DEBUG_0)$(__SHARE_1)/*.o
	rm -f gcc$(__DEBUG_0)$(__SHARE_1)/*.d
	rm -f gcc$(__DEBUG_0)$(__SHARE_1)/TestSuite$(__DEBUG_2)$(__SHARE_3)

first_check: 
	if test $(DEBUG) = 1;then mkdir -p gcc$(__DEBUG_0)$(__SHARE_1);fi
	if test $(DEBUG) = 0;then mkdir -p gcc$(__DEBUG_0)$(__SHARE_1);fi

gcc$(__DEBUG_0)$(__SHARE_1)/TestSuite$(__DEBUG_2)$(__SHARE_3): $(TESTSUITE_OBJECTS)
	$(CXX) -o $@ $(TESTSUITE_OBJECTS)  $(____DEBUG_8)  -pthread -ldl -lpthread -L../$(__SHARE_2)/gcc $(LDFLAGS)  -lPureMVC$(__DEBUG_2)

../bin/gcc/TestSuite$(__DEBUG_2)$(__SHARE_3): gcc$(__DEBUG_0)$(__SHARE_1)/TestSuite$(__DEBUG_2)$(__SHARE_3)
	cp -pf gcc$(__DEBUG_0)$(__SHARE_1)/TestSuite$(__DEBUG_2)$(__SHARE_3) ../bin/gcc/TestSuite$(__DEBUG_2)$(__SHARE_3)

gcc$(__DEBUG_0)$(__SHARE_1)/libPureMVC$(__DEBUG_2)$(__SHARE_24): ../$(__SHARE_2)/gcc/libPureMVC$(__DEBUG_2)$(__SHARE_24)
	cp -pf ../$(__SHARE_2)/gcc/libPureMVC$(__DEBUG_2)$(__SHARE_24) gcc$(__DEBUG_0)$(__SHARE_1)/libPureMVC$(__DEBUG_2)$(__SHARE_24)

gcc$(__DEBUG_0)$(__SHARE_1)/TestSuite_main.o: ./src/main.cpp
	$(CXX) -c -o $@ $(TESTSUITE_CXXFLAGS) $(CPPDEPS) $<

gcc$(__DEBUG_0)$(__SHARE_1)/TestSuite_ProxyTest.o: ./src/ProxyTest.cpp
	$(CXX) -c -o $@ $(TESTSUITE_CXXFLAGS) $(CPPDEPS) $<

gcc$(__DEBUG_0)$(__SHARE_1)/TestSuite_DelegateCommandTest.o: ./src/DelegateCommandTest.cpp
	$(CXX) -c -o $@ $(TESTSUITE_CXXFLAGS) $(CPPDEPS) $<

gcc$(__DEBUG_0)$(__SHARE_1)/TestSuite_SimpleCommandTest.o: ./src/SimpleCommandTest.cpp
	$(CXX) -c -o $@ $(TESTSUITE_CXXFLAGS) $(CPPDEPS) $<

gcc$(__DEBUG_0)$(__SHARE_1)/TestSuite_MacroCommandTest.o: ./src/MacroCommandTest.cpp
	$(CXX) -c -o $@ $(TESTSUITE_CXXFLAGS) $(CPPDEPS) $<

gcc$(__DEBUG_0)$(__SHARE_1)/TestSuite_MediatorTest.o: ./src/MediatorTest.cpp
	$(CXX) -c -o $@ $(TESTSUITE_CXXFLAGS) $(CPPDEPS) $<

gcc$(__DEBUG_0)$(__SHARE_1)/TestSuite_NotificationTest.o: ./src/NotificationTest.cpp
	$(CXX) -c -o $@ $(TESTSUITE_CXXFLAGS) $(CPPDEPS) $<

gcc$(__DEBUG_0)$(__SHARE_1)/TestSuite_ObserverTest.o: ./src/ObserverTest.cpp
	$(CXX) -c -o $@ $(TESTSUITE_CXXFLAGS) $(CPPDEPS) $<

gcc$(__DEBUG_0)$(__SHARE_1)/TestSuite_ModelTest.o: ./src/ModelTest.cpp
	$(CXX) -c -o $@ $(TESTSUITE_CXXFLAGS) $(CPPDEPS) $<

gcc$(__DEBUG_0)$(__SHARE_1)/TestSuite_FacadeTest.o: ./src/FacadeTest.cpp
	$(CXX) -c -o $@ $(TESTSUITE_CXXFLAGS) $(CPPDEPS) $<

gcc$(__DEBUG_0)$(__SHARE_1)/TestSuite_ViewTest.o: ./src/ViewTest.cpp
	$(CXX) -c -o $@ $(TESTSUITE_CXXFLAGS) $(CPPDEPS) $<

gcc$(__DEBUG_0)$(__SHARE_1)/TestSuite_ControllerTest.o: ./src/ControllerTest.cpp
	$(CXX) -c -o $@ $(TESTSUITE_CXXFLAGS) $(CPPDEPS) $<

gcc$(__DEBUG_0)$(__SHARE_1)/TestSuite_IteratorTest.o: ./src/IteratorTest.cpp
	$(CXX) -c -o $@ $(TESTSUITE_CXXFLAGS) $(CPPDEPS) $<

gcc$(__DEBUG_0)$(__SHARE_1)/TestSuite_PureMVCThreadTest.o: ./src/PureMVCThreadTest.cpp
	$(CXX) -c -o $@ $(TESTSUITE_CXXFLAGS) $(CPPDEPS) $<

.PHONY: all install uninstall clean


# Dependencies tracking:
-include gcc$(__DEBUG_0)$(__SHARE_1)/*.d
